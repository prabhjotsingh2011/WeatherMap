{"version":3,"sources":["FormattedDate.js","WeatherIcon.js","WeatherInfo.js","WeatherForecastDay.js","WeatherForecast.js","Weather.js","App.js","reportWebVitals.js","index.js"],"names":["FormattedDate","props","hours","date","getHours","minutes","getMinutes","className","WeatherIcon","icon","code","color","size","animate","WeatherInfo","id","data","city","country","Math","round","temperature","maxTemp","minTemp","feelsLike","weatherMain","description","humidity","windSpeed","visibility","pressure","clouds","WeatherForecastDay","Date","dt","getDay","weather","temp","min","minTemperature","max","maxTemperature","WeatherForecast","useState","loaded","setLoaded","forecast","setForecast","handleResponse","response","daily","console","log","useEffect","coordinates","map","dailyForecast","index","lat","lon","apiUrl","axios","get","then","load","Weather","ready","weatherData","setWeatherData","defaultCity","setCity","searchCity","name","sys","main","temp_max","temp_min","feels_like","all","wind","speed","coord","search","onSubmit","event","preventDefault","type","placeholder","onChange","target","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a12864a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FormattedDate.css\";\r\n\r\nexport default function FormattedDate(props) {\r\n  let hours = props.date.getHours();\r\n  if (hours < 10) {\r\n    hours = `0${hours}`;\r\n  }\r\n  let minutes = props.date.getMinutes();\r\n  if (minutes < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"FormattedDate\">\r\n      updated at {\" : \"}\r\n      <span className=\"textLeft\">\r\n        {hours}:{minutes}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\n\r\nexport default function WeatherIcon(props) {\r\n  const codeMapping = {\r\n    \"01d\": \"CLEAR_DAY\",\r\n    \"01n\": \"CLEAR_NIGHT\",\r\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\r\n    \"02n\": \"PARTLY_CLOUDY_NIGHT\",\r\n    \"03d\": \"CLOUDY\",\r\n    \"03n\": \"CLOUDY\",\r\n    \"04d\": \"CLOUDY\",\r\n    \"04n\": \"CLOUDY\",\r\n    \"09d\": \"SLEET\",\r\n    \"09n\": \"SLEET\",\r\n    \"10d\": \"RAIN\",\r\n    \"10n\": \"RAIN\",\r\n    \"11d\": \"RAIN\",\r\n    \"11n\": \"RAIN\",\r\n    \"13d\": \"SNOW\",\r\n    \"13n\": \"SNOW\",\r\n    \"50d\": \"FOG\",\r\n    \"50n\": \"FOG\",\r\n  };\r\n\r\n  return (\r\n    <ReactAnimatedWeather\r\n      icon={codeMapping[props.code]}\r\n      color=\"white\"\r\n      size={props.size}\r\n      animate={true}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FormattedDate from \"./FormattedDate\";\r\nimport WeatherIcon from \"./WeatherIcon\";\r\nimport \"./WeatherInfo.css\";\r\n\r\nexport default function WeatherInfo(props) {\r\n  return (\r\n    <div className=\"WeatherInfo\">\r\n      <h1 id=\"cityName\">\r\n        <span className=\"cityH1\">{props.data.city},</span>{\" \"}\r\n        <span className=\"countryH1\">{props.data.country}</span>\r\n      </h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <span className=\"mainTemp\">\r\n            {Math.round(props.data.temperature)}°\r\n          </span>\r\n          <span className=\"celsius\"></span>\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <ul className=\"mainInfo\">\r\n            <li>max {Math.round(props.data.maxTemp)}°</li><br/>\r\n            <li>min {Math.round(props.data.minTemp)}°</li><br/>\r\n            <li>feels like {Math.round(props.data.feelsLike)}°</li>\r\n          </ul>\r\n        </div>\r\n        <div id=\"mainIcon\" className=\"col-4\">\r\n          <WeatherIcon code={props.data.icon} size={50} />\r\n        </div>\r\n      </div>\r\n      <p className=\"mainDescription\">\r\n        {props.data.weatherMain}\r\n        <br />\r\n        \r\n      </p>\r\n      <br />\r\n      <ul>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\" id=\"textLeft\">\r\n            <li>Weather </li>\r\n            <li>humidity </li>\r\n            <li>Wind speed</li>\r\n            <li>Visibility </li>\r\n            <li>Pressure</li>\r\n            <li>Clouds</li>\r\n          </div>\r\n          <div className=\"col-6\" id=\"textRight\">\r\n            <li>\r\n              <span className=\"textLeft\"> {props.data.description}</span>\r\n            </li>\r\n            <li>\r\n              <span className=\"textLeft\">{props.data.humidity} %</span>\r\n            </li>\r\n            <li>\r\n              <span className=\"textLeft\">\r\n                {Math.round(props.data.windSpeed)} m/s\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span className=\"textLeft\">\r\n                {props.data.visibility / 1000} km\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span className=\"textLeft\">{props.data.pressure} hPa</span>\r\n            </li>\r\n            <li>\r\n              <span className=\"textLeft\">{props.data.clouds} %</span>\r\n            </li>\r\n            <li>\r\n           \r\n              <FormattedDate date={props.data.date} />\r\n            </li>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport WeatherIcon from \"./WeatherIcon\";\r\nimport \"./WeatherForecastDay.css\";\r\n\r\nexport default function WeatherForecastDay(props) {\r\n  function maxTemperature() {\r\n    let temperature = Math.round(props.data.temp.max);\r\n    return `${temperature}°`;\r\n  }\r\n  function minTemperature() {\r\n    let temperature = Math.round(props.data.temp.min);\r\n    return `${temperature}°`;\r\n  }\r\n  function day() {\r\n    let date = new Date(props.data.dt * 1000);\r\n    let day = date.getDay();\r\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    return days[day];\r\n  }\r\n  return (\r\n    <div className=\"ForecastDay\">\r\n      <div className=\"WeatherForecastDay\">{day()}</div>\r\n      <div className=\"WeatherForecastIcon\">\r\n        <WeatherIcon code={props.data.weather[0].icon} size={37} />\r\n      </div>\r\n      <div className=\"WeatherForecastTemp\">\r\n        <span className=\"WeatherForecastTemp-min\">{minTemperature()}</span>🌡\r\n        <span className=\"WeatherForecastTemp-max\">{maxTemperature()}</span>\r\n      </div>\r\n\r\n      <div className=\"WeatherForecastDescription\">\r\n        {props.data.weather[0].description}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport WeatherForecastDay from \"./WeatherForecastDay\";\r\nimport \"./WeatherForecast.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function WeatherForecast(props) {\r\n  let [loaded, setLoaded] = useState(false);\r\n  let [forecast, setForecast] = useState(null);\r\n\r\n  useEffect(() => { \r\n    setLoaded(false);\r\n    {console.log(props.coordinates);}\r\n  }, [props.coordinates]);\r\n\r\n  function handleResponse(response) {\r\n    setForecast(response.data.daily);\r\n    console.log(response.data.daily);\r\n    setLoaded(true);\r\n  }\r\n  function load() {\r\n    let apiKey = \"d472df3cc457416a11c7918c00d8eaa1\";\r\n    let lat = props.coordinates.lat;\r\n    let lon = props.coordinates.lon;\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n\r\n    axios.get(apiUrl).then(handleResponse);\r\n  }\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div className=\"WeatherForecast\">\r\n        <div className=\"row\">\r\n          {forecast.map(function (dailyForecast, index) {\r\n            if (index < 9) {\r\n              return (\r\n                <div className=\"col-4\" key={index}>\r\n                  <WeatherForecastDay data={dailyForecast} />\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    load();\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport WeatherForecast from \"./WeatherForecast\";\r\nimport axios from \"axios\";\r\nimport \"./Weather.css\";\r\n\r\nexport default function Weather(props) {\r\n  const [weatherData, setWeatherData] = useState({ ready: false });\r\n  const [city, setCity] = useState(props.defaultCity);\r\n\r\n  function searchCity(response) {\r\n    console.log(response);\r\n    setWeatherData({\r\n      ready: true,\r\n      city: response.data.name,\r\n      country: response.data.sys.country,\r\n      temperature: response.data.main.temp,\r\n      maxTemp: response.data.main.temp_max,\r\n      minTemp: response.data.main.temp_min,\r\n      feelsLike: response.data.main.feels_like,\r\n      pressure: response.data.main.pressure,\r\n      visibility: response.data.visibility,\r\n      clouds: response.data.clouds.all,\r\n      humidity: response.data.main.humidity,\r\n      weatherMain: response.data.weather[0].main,\r\n      description: response.data.weather[0].description,\r\n      windSpeed: response.data.wind.speed,\r\n      coordinates: response.data.coord,\r\n      icon: response.data.weather[0].icon,\r\n      date: new Date(response.data.dt * 1000),\r\n    });\r\n  }\r\n\r\n  function search() {\r\n    let apiKey = \"d472df3cc457416a11c7918c00d8eaa1\";\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(searchCity);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    search();\r\n  }\r\n\r\n  function handleCityChange(event) {\r\n    setCity(event.target.value);\r\n  }\r\n\r\n  if (weatherData.ready) {\r\n    return (\r\n      <div className=\"Weather\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row cen\">\r\n            <div className=\"col-3\">\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"Enter a City...\"\r\n                className=\"form-control\"\r\n                onChange={handleCityChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <button type=\"submit\" className=\"searchButton\">\r\n                🔎\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className=\"row cen\">\r\n          <div className=\"col-5\">\r\n            <WeatherInfo data={weatherData} />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <h2>DAILY FORECAST</h2>\r\n            <WeatherForecast coordinates={weatherData.coordinates} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    search();\r\n    return \"Loading. . .\";\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Weather from \"./Weather\";\n\nexport default function App() {\n  return (\n    \n    <div className=\"App\">\n      <div className=\"container\">\n        <Weather defaultCity=\"Mumbai\" />\n        \n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}